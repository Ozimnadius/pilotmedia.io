
// common.js
const jsTools = {
    getNumber: function (str) {
        return parseInt(str.replace(/\s/g, ''));
    },
    getWindowWidth: function () {
        return document.documentElement.clientWidth;
    },
    getNumberFormat: function (number, decimals, dec_point, thousands_sep) {
        var i, j, kw, kd, km;
        if (isNaN(decimals = Math.abs(decimals))) {
            decimals = 2;
        }
        if (dec_point == undefined) {
            dec_point = ",";
        }
        if (thousands_sep == undefined) {
            thousands_sep = ".";
        }
        i = parseInt(number = (+number || 0).toFixed(decimals)) + "";
        if ((j = i.length) > 3) {
            j = j % 3;
        } else {
            j = 0;
        }
        km = (j ? i.substr(0, j) + thousands_sep : "");
        kw = i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands_sep);
        kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : "");
        return km + kw + kd;
    },
    imagesResize: function (src) {
        let img = document.querySelectorAll('img');

        for (let i = 0; i < img.length; i++) {
            img[i].src = src;
        }
    },
    addClass: function (selector, name) {

        let elems = document.querySelectorAll(selector);

        for (let i = 0; i < elems.length; i++) {
            elems[i].classList.add(name);
        }
    },
    removeClass: function (selector, name) {

        let elems = document.querySelectorAll(selector);

        for (let i = 0; i < elems.length; i++) {
            elems[i].classList.remove(name);
        }
    }
};

function Player(parent, settings) {
    let player = this;
    this.audio = parent.querySelector(settings.audio);
    this.playBtn = parent.querySelector(settings.play);
    this.pauseBtn = parent.querySelector(settings.pause);
    this.timeLeft = parent.querySelector(settings.time);
    this.scale = parent.querySelector(settings.scale);
    this.progress = parent.querySelector(settings.progress);
    this.currentTime = this.audio.currentTime;
    this.total = this.audio.duration || 0;


    this.play = function () {
        player.audio.play();
        togglePlay();
    };

    this.pause = function () {
        player.audio.pause();
        togglePlay();
    };

    this.setTimeLeft = function () {
        player.timeLeft.innerHTML = formatTime(player.total - player.currentTime);

    };

    this.setProgress = function () {
        let percent = Math.floor(player.currentTime / player.total * 100);
        player.progress.style.width = percent + '%';
    };

    this.update = function () {
        player.total = player.audio.duration;
        player.currentTime = player.audio.currentTime;
        player.setTimeLeft();
        player.setProgress();
    };

    this.audio.addEventListener('timeupdate', player.update);

    this.playBtn.addEventListener('click', player.play);

    this.pauseBtn.addEventListener('click', player.pause);

    this.scale.addEventListener('click', function (e)  {
       player.audio.currentTime = player.total*(e.layerX/this.offsetWidth);
    });

    function togglePlay() {
        if (player.playBtn.classList.contains('active')) {
            player.playBtn.classList.remove('active');
            player.pauseBtn.classList.add('active');
        } else {
            player.playBtn.classList.add('active');
            player.pauseBtn.classList.remove('active');
        }
    }

    function formatTime(timestamp) {
        timestamp = Math.floor(timestamp);
        let minutes = Math.floor(timestamp / 60),
            seconds = timestamp % 60;
        if (seconds < 10) {
            seconds = '0' + seconds;
        }
        let str = '-' + minutes + ':' + seconds;
        return str;
    }


    this.setTimeLeft();


}
function Popup() {
    let popup = this,
        modal = document.createElement('div'),
        wrap = document.createElement('div'),
        form = document.createElement('div'),
        close = document.createElement('button');

    close.innerHTML = '<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M0.43934 0.43934C-0.146447 1.02513 -0.146447 1.97487 0.43934 2.56066L15.4393 17.5607C16.0251 18.1464 16.9749 18.1464 17.5607 17.5607C18.1464 16.9749 18.1464 16.0251 17.5607 15.4393L2.56066 0.43934C1.97487 -0.146447 1.02513 -0.146447 0.43934 0.43934Z" fill="#DADADA"/><path fill-rule="evenodd" clip-rule="evenodd" d="M17.5607 0.43934C18.1464 1.02513 18.1464 1.97487 17.5607 2.56066L2.56066 17.5607C1.97487 18.1464 1.02513 18.1464 0.43934 17.5607C-0.146446 16.9749 -0.146446 16.0251 0.43934 15.4393L15.4393 0.43934C16.0251 -0.146447 16.9749 -0.146447 17.5607 0.43934Z" fill="#DADADA"/></svg>';

    // adds class
    close.classList.add('popup__close');
    form.classList.add('popup__form');
    wrap.classList.add('popup__wrap');
    modal.classList.add('popup');

    // appends
    wrap.append(close);
    wrap.append(form);
    modal.append(wrap);
    document.body.append(modal);

    this.open = function (content) {
        let html = getHtml(content);
        form.innerHTML = html;
        modal.classList.add('active');

    };

    this.close = function () {
        form.innerHTML = '';
        modal.classList.remove('active');
    };

    function getHtml(content){
        let type = typeof content;

        if (type=='string'){
            return content;
        } else {
            return content.outerHTML;
        }
    }

    modal.addEventListener('click', function (e){
        if (!e.target.closest('.popup__wrap')){
            popup.close();
        }
    });
    close.addEventListener('click', popup.close);
}

function Template(settings){
    let tmpl = this;
    if (settings.parent){
        let parent = document.querySelector(settings.parent);
        this.template = parent.querySelector(settings.template).content;
    } else{
        this.template = document.querySelector(settings.template).content;
    }
    this.content = this.template.querySelector(settings.content);

    this.html = function (){
        return tmpl.content;
    }
}

let popup = new Popup();

//index.js
(function () {

}());

window.onload = function () {

    jsTools.addClass('.jsAddAnimate', 'animate');

    let allAudio = document.querySelectorAll('.audio');

    for (let i = 0; i < allAudio.length; i++) {
        new Player(allAudio[i], {
            audio: '.audio__file',
            play: '.audio__btn-play',
            pause: '.audio__btn-pause',
            time: '.audio__time',
            scale: '.audio__scale',
            progress: '.audio__progress'
        });
    }


    var teachsSwiper = new Swiper('.teachs__container', {

        // If we need pagination
        pagination: {
            el: '.teachs__pag',
            bulletClass: 'teachs__bullet',
            bulletActiveClass: 'teachs__bullet_active',
            clickable: true
        },
        // Navigation arrows
        navigation: {
            nextEl: '.teachs__next',
            prevEl: '.teachs__prev',
            disabledClass: 'teachs__arr_disabled'
        },
    });

    var revsSwiper = new Swiper('.revs__container', {
        spaceBetween: 20,
        slidesPerView: 4.7,
        navigation: {
            nextEl: '.revs__next',
            prevEl: '.revs__prev',
            disabledClass: 'revs__arr_disabled'
        },
    });

    let jsOpenTemplates = document.querySelectorAll('.jsOpenTemplate');


    for (let i = 0; i < jsOpenTemplates.length; i++) {
        jsOpenTemplates[i].addEventListener('click', function (e) {
            e.preventDefault();
            let data = this.dataset,
                settings = {
                    parent: data.parent || '',
                    template: data.template,
                    content: data.content
                };

            let html = new Template(settings).html();
            popup.open(html);
        });
    }

};